name: SonarQube Example

# Run on every commit, schedule, and manual trigger
on:
  push:
    branches: [ main ]  # Run on main branch commits
  schedule:
    - cron: '0 3 * * 0'  # Run weekly on Sunday at 3 AM
  workflow_dispatch:  # Keep manual trigger option

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones disabled for better relevancy of analysis
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'
        
    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Install SonarScanner
      run: |
        dotnet tool install --global dotnet-sonarscanner
        
    - name: Begin SonarQube Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        # Skip actual SonarQube analysis if secrets aren't configured
        if [ -n "$SONAR_TOKEN" ] && [ -n "$SONAR_HOST_URL" ]; then
          dotnet sonarscanner begin \
            /k:"code-coverage-example" \
            /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ env.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
        else
          echo "SonarQube secrets not configured, running example mode only"
        fi
        
    - name: Build
      run: dotnet build
      
    - name: Test with coverage
      run: |
        dotnet test --no-build /p:CollectCoverage=true /p:CoverletOutputFormat="opencover,cobertura"
        
    - name: End SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        # Skip actual SonarQube analysis if secrets aren't configured
        if [ -n "$SONAR_TOKEN" ] && [ -n "$SONAR_HOST_URL" ]; then
          dotnet sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"
        else
          echo "SonarQube secrets not configured, skipping end analysis"
        fi
        
    # Generate HTML report for GitHub Pages
    - name: Generate HTML Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator "-reports:**/coverage.cobertura.xml" "-targetdir:sonarqube-report" "-reporttypes:Html"
        
    - name: Extract coverage percentage
      id: coverage
      run: |
        # Extract line rate from the Cobertura XML
        LINE_RATE=$(grep -o 'line-rate="[0-9.]*"' */*/coverage.cobertura.xml | head -1 | grep -o '[0-9.]*')
        PERCENTAGE=$(echo "$LINE_RATE * 100" | bc)
        echo "Line coverage percentage: $PERCENTAGE%"
        echo "coverage_percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
        
        # Create badge
        COLOR="red"
        if (( $(echo "$PERCENTAGE > 90" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$PERCENTAGE > 75" | bc -l) )); then
          COLOR="yellow"
        fi
        
        # Create badge with actual coverage percentage
        wget -O sonarqube-badge.svg "https://img.shields.io/badge/sonarqube-${PERCENTAGE}%25-${COLOR}"
        
    # Upload artifacts for debugging
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: sonarqube-coverage-report
        path: sonarqube-report

    # Deploy to GitHub Pages using the shared workflow
    - name: Deploy to GitHub Pages
      uses: ./.github/workflows/shared/deploy-to-pages
      with:
        tool_name: sonarqube
        report_dir: sonarqube-report
        badge_path: sonarqube-badge.svg
        coverage_percentage: ${{ steps.coverage.outputs.coverage_percentage }}
