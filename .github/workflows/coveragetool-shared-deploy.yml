# Reusable workflow for deploying coverage reports to GitHub Pages
name: Deploy to GitHub Pages

on:
  workflow_call:
    inputs:
      tool_name:
        required: true
        type: string
        description: "Name of the coverage tool"
      report_dir:
        required: true
        type: string
        description: "Directory containing the HTML report"
      badge_path:
        required: true
        type: string
        description: "Path to the badge SVG file"
      coverage_percentage:
        required: true
        type: string
        description: "Coverage percentage value (e.g. 85.5)"

permissions:
  contents: write
  pages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TOOL_NAME: ${{ inputs.tool_name }}
          REPORT_DIR: ${{ inputs.report_dir }}
          BADGE_PATH: ${{ inputs.badge_path }}
          COVERAGE_PERCENTAGE: ${{ inputs.coverage_percentage }}
        run: |
          # Extract branch name and create safe directory name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_NAME=${BRANCH_NAME//\//-}
          
          # Tool-specific directory structure
          TOOL_DIR="tools/$TOOL_NAME"
          
          echo "Deploying coverage for $TOOL_NAME to $TOOL_DIR"
          
          # Save coverage report to a temporary location
          mkdir -p /tmp/coverage-report
          cp -r $REPORT_DIR/* /tmp/coverage-report/
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Create a clean directory for gh-pages branch
          mkdir -p /tmp/gh-pages
          cd /tmp/gh-pages
          
          # Setup authentication using GITHUB_TOKEN
          REPO_URL="https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          
          # Initialize new repo with authentication
          git init
          git remote add origin "$REPO_URL"
          git fetch origin gh-pages --depth=1 || true
          
          # Create or update gh-pages branch
          if git branch -a | grep -q origin/gh-pages; then
            git checkout -b gh-pages origin/gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf . || true
            echo "# Code Coverage Reports" > index.md
          fi
          
          # Create directory for this tool (clean it first if it exists)
          mkdir -p "$TOOL_DIR"
          rm -rf "$TOOL_DIR"/*
          
          # Copy coverage report to tool directory
          cp -r /tmp/coverage-report/* "$TOOL_DIR"/
          
          # Copy badge to the root of the tool directory
          if [ -f "$BADGE_PATH" ]; then
            cp "$BADGE_PATH" "$TOOL_DIR/badge.svg"
          else
            # Create badge using shields.io if not provided
            # Determine color based on coverage
            COLOR="red"
            if (( $(echo "$COVERAGE_PERCENTAGE > 90" | bc -l) )); then
              COLOR="brightgreen"
            elif (( $(echo "$COVERAGE_PERCENTAGE > 75" | bc -l) )); then
              COLOR="yellow"
            fi
            
            wget -O "$TOOL_DIR/badge.svg" "https://img.shields.io/badge/$TOOL_NAME-${COVERAGE_PERCENTAGE}%25-${COLOR}"
          fi
          
          # Create/update tools index file that links to all tools
          mkdir -p tools
          if [ ! -f "tools/index.md" ]; then
            echo "# Coverage Tools Comparison" > tools/index.md
            echo "" >> tools/index.md
            echo "This page contains coverage reports generated by different tools for the same codebase." >> tools/index.md
            echo "" >> tools/index.md
            echo "## Available Tools" >> tools/index.md
          fi
          
          # Update the link for this tool in the index
          grep -v "\[$TOOL_NAME\]" tools/index.md > tools/index.md.tmp || true
          echo "- [$TOOL_NAME]($TOOL_NAME/index.html) [![$TOOL_NAME Coverage]($TOOL_NAME/badge.svg)](/$TOOL_NAME/index.html) - Updated on $(date)" >> tools/index.md.tmp
          mv tools/index.md.tmp tools/index.md
          
          # Update main index to include tools index
          if ! grep -q "\[Coverage Tools Comparison\]" index.md; then
            echo "" >> index.md
            echo "## Tool Comparisons" >> index.md
            echo "- [Coverage Tools Comparison](tools/index.md) - Compare different coverage tools" >> index.md
          fi
          
          # Commit and push changes
          git add .
          git commit -m "Update coverage report for $TOOL_NAME"
          git push origin gh-pages
